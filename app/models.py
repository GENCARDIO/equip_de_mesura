import os
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import create_engine, MetaData
from sqlalchemy_utils import database_exists
from sqlalchemy.orm import sessionmaker
from sqlalchemy import Column, String

main_dir = os.path.dirname(os.path.dirname(__file__))

# db_path = os.path.join(main_dir, "volums_fitxes_tecniques", "db", "fitxes_tecniques.db")
db_path = os.path.join(main_dir, "fitxes_tecniques.db")
print(db_path)
url = f"sqlite:///{db_path}"

engine = create_engine(url, connect_args={"check_same_thread": False})
Base = declarative_base()
Session = sessionmaker(engine)
session = Session()
meta = MetaData()


# Clases
class Fitxes(Base):
    __tablename__ = ("fitxes_tecniques")
    codi_aux = Column(String(), primary_key=True)
    codi_cgc = Column(String())
    descripcio = Column(String())
    fabricant = Column(String())
    ref_fabricant = Column(String())
    serial_number = Column(String())
    model = Column(String())
    emp_subministradora = Column(String())
    data_alta = Column(String())
    condicions_equip = Column(String())
    data_baixa = Column(String())
    situacio_contractual = Column(String())
    preu = Column(String())
    tipus = Column(String())
    amplada = Column(String())
    al√ßada = Column(String())
    profunditat = Column(String())
    pes = Column(String())
    volum = Column(String())
    condicions_ambientals = Column(String())
    humitat = Column(String())
    presa_aigua = Column(String())
    marca_pantalla = Column(String())
    model_pantalla = Column(String())
    num_serie_pantalla = Column(String())
    codi_pantalla = Column(String())
    marca_sai = Column(String())
    model_sai = Column(String())
    num_serie_sai = Column(String())
    codi_sai = Column(String())
    cont_comercial = Column(String())
    cont_tecnic = Column(String())
    observacions = Column(String())
    marca_lector = Column(String())
    model_lector = Column(String())
    num_serie_lector = Column(String())
    codi_lector = Column(String())
    marca_impresora = Column(String())
    model_impresora = Column(String())
    num_serie_impresora = Column(String())
    codi_impresora = Column(String())
    marca_tensio = Column(String())
    model_tensio = Column(String())
    num_serie_tensio = Column(String())
    codi_tensio = Column(String())
    soft_1 = Column(String())
    versio_1 = Column(String())
    soft_2 = Column(String())
    versio_2 = Column(String())
    soft_3 = Column(String())
    versio_3 = Column(String())
    soft_4 = Column(String())
    versio_4 = Column(String())
    soft_5 = Column(String())
    versio_5 = Column(String())
    personal_tecnic_udmmp = Column(String())
    facultatius_udmmp = Column(String())
    personal_tecnic_udmmp_2 = Column(String())
    facultatius_udmmp_2 = Column(String())
    personal_tecnic_udmmp_3 = Column(String())
    facultatius_udmmp_3 = Column(String())
    personal_tecnic_udmmp_4 = Column(String())
    facultatius_udmmp_4 = Column(String())
    personal_tecnic_udmmp_5 = Column(String())
    facultatius_udmmp_5 = Column(String())
    ref_fung1 = Column(String())
    desc_fung1 = Column(String())
    ref_fung2 = Column(String())
    desc_fung2 = Column(String())
    ref_fung3 = Column(String())
    desc_fung3 = Column(String())
    ref_fung4 = Column(String())
    desc_fung4 = Column(String())
    ref_fung5 = Column(String())
    desc_fung5 = Column(String())
    doc1 = Column(String())
    doc2 = Column(String())
    cont_manteniment = Column(String())
    manteniment_ext = Column(String())
    manteniment_int = Column(String())
    verificacio_int = Column(String())
    verificacio_ext = Column(String())
    cal_ext = Column(String())
    cal_int = Column(String())
    nom_contracte = Column(String())
    emp_respon1 = Column(String())
    periode_cober1 = Column(String())
    dades_cont1 = Column(String())
    emp_respon2 = Column(String())
    periode_cober2 = Column(String())
    dades_cont2 = Column(String())
    emp_respon_prev_ext = Column(String())
    periodicitat_prev_ext = Column(String())
    cont_prev_ext = Column(String())
    mant_prev_ext = Column(String())
    verif_prev_ext = Column(String())
    calib_prev_ext = Column(String())
    marges_accept_prev_ext = Column(String())
    desc_prev_int = Column(String())
    periodicitat_prev_int = Column(String())
    marges_accept_prev_int = Column(String())
    desc_verif_int = Column(String())
    periodicitat_verif_int = Column(String())
    marges_accept_verif_int = Column(String())
    calib_desc_int = Column(String())
    calib_periodicitat_int = Column(String())
    calib_marges_accept_int = Column(String())
    data_modificacio = Column(String())
    versio_doc = Column(String())
    motiu_modificacio = Column(String())


if not database_exists(engine.url):
    # create_database(engine.url)
    Base.metadata.create_all(engine)
else:
    # Connect the database if exists.
    engine.connect()
